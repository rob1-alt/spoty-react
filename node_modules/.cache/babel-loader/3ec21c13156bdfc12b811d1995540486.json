{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/my-app 2/src/Button.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CopyExample() {\n  _s();\n\n  const [copySuccess, setCopySuccess] = useState('');\n  const textAreaRef = useRef(null);\n\n  function copyToClipboard(e) {\n    textAreaRef.current.select();\n    document.execCommand('copy'); // This is just personal preference.\n    // I prefer to not show the the whole text area selected.\n\n    e.target.focus();\n    setCopySuccess('Copied!');\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\n    /* Logical shortcut for only displaying the \n       button if the copy command exists */\n    document.queryCommandSupported('copy') && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: copyToClipboard,\n        children: \"Partager le lien :  http://spoty/share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), copySuccess]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"TextArea\",\n        ref: textAreaRef,\n        value: window.location.href.hidden\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CopyExample, \"5sZfZmLauWI85+wfu8m2lmbWaFQ=\");\n\n_c = CopyExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"CopyExample\");","map":{"version":3,"sources":["/Users/admin/Desktop/my-app 2/src/Button.js"],"names":["React","useRef","useState","CopyExample","copySuccess","setCopySuccess","textAreaRef","copyToClipboard","e","current","select","document","execCommand","target","focus","queryCommandSupported","window","location","href","hidden"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAEpC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMI,WAAW,GAAGL,MAAM,CAAC,IAAD,CAA1B;;AAEA,WAASM,eAAT,CAAyBC,CAAzB,EAA4B;AAC1BF,IAAAA,WAAW,CAACG,OAAZ,CAAoBC,MAApB;AACAC,IAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB,EAF0B,CAG1B;AACA;;AACAJ,IAAAA,CAAC,CAACK,MAAF,CAASC,KAAT;AACAT,IAAAA,cAAc,CAAC,SAAD,CAAd;AACD;;AAAA;AAED,sBACE;AAAA;AAEG;AACP;AACOM,IAAAA,QAAQ,CAACI,qBAAT,CAA+B,MAA/B,kBACC;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAER,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGH,WAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAUE;AAAA,6BAEE;AAAU,QAAA,SAAS,EAAC,UAApB;AACE,QAAA,GAAG,EAAEE,WADP;AAEE,QAAA,KAAK,EAAEU,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC;AAF9B;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAlCuBhB,W;;KAAAA,W","sourcesContent":["import React, { useRef, useState } from 'react';\n\nexport default function CopyExample() {\n\n  const [copySuccess, setCopySuccess] = useState('');\n  const textAreaRef = useRef(null);\n\n  function copyToClipboard(e) {\n    textAreaRef.current.select();\n    document.execCommand('copy');\n    // This is just personal preference.\n    // I prefer to not show the the whole text area selected.\n    e.target.focus();\n    setCopySuccess('Copied!');\n  };\n\n  return (\n    <div>\n      {\n       /* Logical shortcut for only displaying the \n          button if the copy command exists */\n       document.queryCommandSupported('copy') &&\n        <div>\n          <button className=\"button\" onClick={copyToClipboard}>Partager le lien :  http://spoty/share</button> \n          {copySuccess}\n        </div>\n      }\n      <form>\n\n        <textarea className=\"TextArea\"\n          ref={textAreaRef}\n          value={window.location.href.hidden}\n        />\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}